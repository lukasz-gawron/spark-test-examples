<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.lgawron.spark</groupId>
  <artifactId>spark-test-examples</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!--libraries-->
    <scala-library.version>2.11.8</scala-library.version>
    <scalatest.version>3.0.4</scalatest.version>
    <spark.version>2.2.0.cloudera1</spark.version>
    <spark.streaming.kafka.version>1.6.3</spark.streaming.kafka.version>

    <!--plugins-->
    <scalatest-maven-plugin.version>1.0</scalatest-maven-plugin.version>
    <maven-scala-plugin.version>2.15.2</maven-scala-plugin.version>
  </properties>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.scala-tools</groupId>
          <artifactId>maven-scala-plugin</artifactId>
          <version>${maven-scala-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <scalaVersion>${scala-library.version}</scalaVersion>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>${scalatest-maven-plugin.version}</version>
          <configuration>
            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
            <junitxml>.</junitxml>
            <filereports>WDF TestSuite.txt</filereports>
            <suites>*Test,*IT</suites>
            <stdout>I</stdout>
          </configuration>
          <executions>
            <execution>
              <id>scala-test</id>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <suffixes>Test</suffixes>
              </configuration>
            </execution>
            <execution>
              <id>integration-test</id>
              <phase>integration-test</phase>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <suffixes>IT</suffixes>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala-library.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-kafka_2.11</artifactId>
      <version>${spark.streaming.kafka.version}</version>
    </dependency>

    <dependency>
      <groupId>MrPowers</groupId>
      <artifactId>spark-fast-tests</artifactId>
      <version>2.2.0_0.7.0</version>
    </dependency>
    <!--<dependency>-->
      <!--<groupId>com.holdenkarau</groupId>-->
      <!--<artifactId>spark-testing-base_2.11</artifactId>-->
      <!--<version>2.1.0_0.9.0</version>-->
      <!--<scope>test</scope>-->
      <!--<exclusions>-->
        <!--&lt;!&ndash; below exclude is required after upgrade to 2.1.0.cloudera1 otherwise-->
        <!--java.lang.IllegalArgumentException: Unable to instantiate SparkSession with Hive support because Hive classes are not found.&ndash;&gt;-->
        <!--<exclusion>-->
          <!--<artifactId>hadoop-mapreduce-client-jobclient</artifactId>-->
          <!--<groupId>org.apache.hadoop</groupId>-->
        <!--</exclusion>-->
        <!--&lt;!&ndash; below exclude is required after upgrade to 2.1.0.cloudera1 otherwise-->
        <!--Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.util.StopWatch will be thrown &ndash;&gt;-->
        <!--<exclusion>-->
          <!--<groupId>org.apache.hadoop</groupId>-->
          <!--<artifactId>hadoop-common</artifactId>-->
        <!--</exclusion>-->
      <!--</exclusions>-->
    <!--</dependency>-->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.11</artifactId>
      <version>${scalatest.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <!--on MacOS Spark using Snappy requires some explicit settings otherwise it fails-->
      <id>withSnappySupportOnMacOs</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.scalatest</groupId>
              <artifactId>scalatest-maven-plugin</artifactId>
              <version>${scalatest-maven-plugin.version}</version>
              <configuration>
                <argLine>-Dorg.xerial.snappy.lib.name=libsnappyjava.jnilib -Dorg.xerial.snappy.tempdir=/tmp</argLine>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
    <repository>
      <id>cloudera</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>
    <repository>
      <id>spark-packages</id>
      <url>http://dl.bintray.com/spark-packages/maven</url>
    </repository>

  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
  </pluginRepositories>
</project>